{
  "x-generator": "NSwag v13.13.2.0 (NJsonSchema v10.5.2.0 (Newtonsoft.Json v13.0.0.0))",
  "swagger": "2.0",
  "info": {
    "title": "Store API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/TodoItems": {
      "get": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_GetTodoItemsWithPagination",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "ListId",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "PageNumber",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedListOfTodoItemDto"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTodoItemCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTodoItemCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems/UpdateItemDetails": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_UpdateItemDetails",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTodoItemDetailCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoLists": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Get",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/TodosVm"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateTodoListCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoLists/{id}": {
      "put": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateTodoListCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserManager/Login": {
      "post": {
        "tags": [
          "UserManager"
        ],
        "operationId": "UserManager_Login",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoginViewModel"
            }
          }
        }
      }
    },
    "/api/UserManager/Register": {
      "post": {
        "tags": [
          "UserManager"
        ],
        "operationId": "UserManager_Restier",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/LoginViewModel"
            }
          }
        }
      }
    },
    "/api/FoodCategory": {
      "get": {
        "tags": [
          "FoodCategory"
        ],
        "operationId": "FoodCategory_GetFoodCategorysWithPagination",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "PageNumber",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedListOfFoodCategoryDto"
            }
          }
        }
      },
      "post": {
        "tags": [
          "FoodCategory"
        ],
        "operationId": "FoodCategory_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFoodCategoryCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/api/FoodCategory/{id}": {
      "put": {
        "tags": [
          "FoodCategory"
        ],
        "operationId": "FoodCategory_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFoodCategoryCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FoodCategory"
        ],
        "operationId": "FoodCategory_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    },
    "/api/Food": {
      "get": {
        "tags": [
          "Food"
        ],
        "operationId": "Food_GetFoodsWithPagination",
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "PageNumber",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          },
          {
            "type": "integer",
            "name": "PageSize",
            "in": "query",
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaginatedListOfFoodDto"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Food"
        ],
        "operationId": "Food_Create",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "produces": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "parameters": [
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateFoodCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": false,
            "description": "",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      }
    },
    "/api/Food/{id}": {
      "put": {
        "tags": [
          "Food"
        ],
        "operationId": "Food_Update",
        "consumes": [
          "application/json",
          "text/json",
          "application/*+json"
        ],
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          },
          {
            "name": "command",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateFoodCommand"
            },
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Food"
        ],
        "operationId": "Food_Delete",
        "parameters": [
          {
            "type": "integer",
            "name": "id",
            "in": "path",
            "required": true,
            "format": "int32",
            "x-nullable": false
          }
        ],
        "responses": {
          "200": {
            "x-nullable": true,
            "description": "",
            "schema": {
              "type": "file"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "PaginatedListOfTodoItemDto": {
      "type": "object",
      "required": [
        "pageIndex",
        "totalPages",
        "totalCount",
        "hasPreviousPage",
        "hasNextPage"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TodoItemDto"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "hasPreviousPage": {
          "type": "boolean"
        },
        "hasNextPage": {
          "type": "boolean"
        }
      }
    },
    "TodoItemDto": {
      "type": "object",
      "required": [
        "id",
        "listId",
        "done",
        "priority"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "listId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "done": {
          "type": "boolean"
        },
        "priority": {
          "type": "integer",
          "format": "int32"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "CreateTodoItemCommand": {
      "type": "object",
      "required": [
        "listId"
      ],
      "properties": {
        "listId": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "UpdateTodoItemCommand": {
      "type": "object",
      "required": [
        "id",
        "done"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "done": {
          "type": "boolean"
        }
      }
    },
    "UpdateTodoItemDetailCommand": {
      "type": "object",
      "required": [
        "id",
        "listId",
        "priority"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "listId": {
          "type": "integer",
          "format": "int32"
        },
        "priority": {
          "$ref": "#/definitions/PriorityLevel"
        },
        "note": {
          "type": "string"
        }
      }
    },
    "PriorityLevel": {
      "type": "integer",
      "description": "",
      "x-enumNames": [
        "None",
        "Low",
        "Medium",
        "High"
      ],
      "enum": [
        0,
        1,
        2,
        3
      ]
    },
    "TodosVm": {
      "type": "object",
      "properties": {
        "priorityLevels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriorityLevelDto"
          }
        },
        "lists": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TodoListDto"
          }
        }
      }
    },
    "PriorityLevelDto": {
      "type": "object",
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "TodoListDto": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TodoItemDto"
          }
        }
      }
    },
    "CreateTodoListCommand": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        }
      }
    },
    "UpdateTodoListCommand": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        }
      }
    },
    "LoginViewModel": {
      "type": "object",
      "properties": {
        "identityToken": {
          "type": "string"
        }
      }
    },
    "LoginCommand": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "PaginatedListOfFoodCategoryDto": {
      "type": "object",
      "required": [
        "pageIndex",
        "totalPages",
        "totalCount",
        "hasPreviousPage",
        "hasNextPage"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoodCategoryDto"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "hasPreviousPage": {
          "type": "boolean"
        },
        "hasNextPage": {
          "type": "boolean"
        }
      }
    },
    "FoodCategoryDto": {
      "type": "object",
      "required": [
        "id",
        "isActive"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isActive": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "CreateFoodCategoryCommand": {
      "type": "object",
      "required": [
        "isActive"
      ],
      "properties": {
        "isActive": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "UpdateFoodCategoryCommand": {
      "type": "object",
      "required": [
        "id",
        "isActive"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "isActive": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "PaginatedListOfFoodDto": {
      "type": "object",
      "required": [
        "pageIndex",
        "totalPages",
        "totalCount",
        "hasPreviousPage",
        "hasNextPage"
      ],
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FoodDto"
          }
        },
        "pageIndex": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "hasPreviousPage": {
          "type": "boolean"
        },
        "hasNextPage": {
          "type": "boolean"
        }
      }
    },
    "FoodDto": {
      "type": "object",
      "required": [
        "foodCategoryId",
        "price"
      ],
      "properties": {
        "foodCategoryId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "decimal"
        },
        "foodInventoryStatus": {
          "$ref": "#/definitions/FoodInventoryStatus"
        }
      }
    },
    "FoodInventoryStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/SmartEnumOfFoodInventoryStatus"
        },
        {
          "type": "object"
        }
      ]
    },
    "SmartEnumOfFoodInventoryStatus": {
      "allOf": [
        {
          "$ref": "#/definitions/SmartEnumOfFoodInventoryStatusAndInteger"
        },
        {
          "type": "object",
          "x-abstract": true
        }
      ]
    },
    "SmartEnumOfFoodInventoryStatusAndInteger": {
      "type": "object",
      "x-abstract": true,
      "required": [
        "value"
      ],
      "properties": {
        "name": {
          "type": "string"
        },
        "value": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "CreateFoodCommand": {
      "type": "object",
      "required": [
        "foodCategoryId",
        "price"
      ],
      "properties": {
        "foodCategoryId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "decimal"
        },
        "foodInventoryStatusId": {
          "$ref": "#/definitions/FoodInventoryStatus"
        }
      }
    },
    "UpdateFoodCommand": {
      "type": "object",
      "required": [
        "id",
        "foodCategoryId",
        "price"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "foodCategoryId": {
          "type": "integer",
          "format": "int32"
        },
        "name": {
          "type": "string"
        },
        "price": {
          "type": "number",
          "format": "decimal"
        },
        "foodInventoryStatusId": {
          "$ref": "#/definitions/FoodInventoryStatus"
        }
      }
    }
  },
  "securityDefinitions": {
    "JWT": {
      "type": "apiKey",
      "description": "Type into the textbox: Bearer {your JWT token}.",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}